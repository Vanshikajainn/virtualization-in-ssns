#define BLYNK_PRINT Serial
#define BLYNK_TEMPLATE_ID "TMPL3BhJpo4Lr"
#define BLYNK_TEMPLATE_NAME "NODEMCU"
#define BLYNK_AUTH_TOKEN "tjYRdkp39si1fYEQFOtKHbmAcInLOMtJ"


#include <Wire.h>
#include <DHT.h>
#include <DHT_U.h>
#include <BlynkSimpleEsp8266.h>
#include <ESP8266WiFi.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);

char auth[] = "tjYRdkp39si1fYEQFOtKHbmAcInLOMtJ";
char ssid[] = "Anshul";
char pass[] = "anshul@123";


BlynkTimer timer;

#define DHTPIN 4
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);


void sendSensorData()
{
  float humi = dht.readHumidity();
  float temp = dht.readTemperature(); // or dht.readTemperature(true) for Fahrenheit

  if (isnan(humi) || isnan(temp)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // You can send any value at any time.
  // Please don't send more than 10 values per second.
  Blynk.virtualWrite(V0, temp);
  Blynk.virtualWrite(V2, humi);
}


void setup() {
  
  Serial.begin(9600);
  Blynk.begin (auth, ssid, pass);
  dht.begin();

  timer.setInterval(1000L, sendSensorData);

  
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.init();
  Serial.begin(9600);
  lcd.backlight();
  lcd.print("VSSn");
  delay(3000);
  lcd.clear();
  


}

void loop() {

  Blynk.run();

  float humi = dht.readHumidity();
  float temp = dht.readTemperature(); // or dht.readTemperature(true) for Fahrenheit

  if (isnan(humi) || isnan(temp)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // You can send any value at any time.
  // Please don't send more than 10 values per second.
  Blynk.virtualWrite(V0, temp);
  Blynk.virtualWrite(V2, humi);

  lcd.setCursor(0,0);
  lcd.print("Temp:");
  lcd.print(temp);
  
  lcd.setCursor(0,1);
  lcd.print("Humidity :");
  lcd.print(humi);
  

  delay(5000);


}
